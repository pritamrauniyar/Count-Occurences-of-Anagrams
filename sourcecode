class Solution{
public:
	int search(string pat, string txt) {
	    unordered_map<char,int>m;
	     for (auto it : pat) m[it]++; //automatic feed your data and it's count in map from anagram
	    int k = pat.length();
	    int n = txt.length();
	    int count =m.size();
	    int i=0,j=0,ans=0;
	    while (j<n)
	    {
	        if (m.find(txt[j])!=m.end()){
	             m[txt[j]]--;
                if (m[txt[j]]==0)
	                count--;
	        }
	       
	        if(j-i+1<k)
	        {
	            j++;
	        }
	      else if (j-i+1==k)
	        {
	            if (count==0)
	            ans++;
	            if (m.find(txt[i])!=m.end())
	            {
	                m[txt[i]]++;
	                if(m[txt[i]]==1)
	                count++;
	            }
	             i++;
	             j++;
	        }
	    }
	    return ans;
	}
	   
	    

};
